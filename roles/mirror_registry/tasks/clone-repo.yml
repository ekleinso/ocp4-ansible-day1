- name: Display the JSON file content
  shell: "cat {{ mirror_registry_secret }}"
  register: result

- name: save the result data to a Variable as a Fact
  set_fact:
    pull_secret: "{{ result.stdout }}"

- name: parse the Json data to a Variable as a Fact
  set_fact:
    registry_auth: "{{ lookup('template', 'registry_auth.json.j2') }}"

- name: "Mirror json"
  debug:
    msg:
      - "pull-secret ............ {{ pull_secret }}"
      - "registry auth .......... {{ registry_auth }}"
      - "merge .................. {{ pull_secret | combine(registry_auth | items2dict) }}"

- name: "Get OpenShift Version"
  shell: "openshift-install version | grep '^openshift-install' | awk '{print $2}'"
  register: openshift_version

- name: parse the OpenShift version data to variables as facts
  set_fact:
    ocp_major: "{{ openshift_version.stdout.split('.')[:2] | join('.') }}"
    ocp_minor: "{{ openshift_version.stdout }}"

- name: "OpenShift details"
  debug:
    msg:
      - "OpenShift Version ...... {{ ocp_major }}"
      - "OpenShift Major ........ {{ ocp_minor }}"

- name: "Template a file to {{ oai_path }}/configmap.yml"
  ansible.builtin.template:
    src: imagesetconfig.yaml.j2
    dest: "{{ mirror_registry_path }}/imagesetconfig.yaml"

- name: "Create directory $XDG_RUNTIME_DIR/containers"
  file:
    path: "{{ lookup('env', 'XDG_RUNTIME_DIR') }}/containers/"
    state: directory

- name: "Copy merged pull secret"
  copy:
    src: "{{ pull_secret | combine(registry_auth | items2dict) }}"
    dest: "{{ lookup('env', 'XDG_RUNTIME_DIR') }}/containers/auth.json"

- name: "Mirror images"
  command: "oc mirror --skip-cleanup --dest-skip-tls --config imagesetconfig.yaml docker://{{ ansible_host }}:8443/ibm"
  args:
    chdir: "{{ mirror_registry_path }}"

